package network.extensions;

import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

//Java 1.8 specific made have to do it manually
//import java.util.Base64;
import network.extensions.Base64Encode;



public class WebSocket {
	public static final String magicStr = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";
	
	public static String generateHash(String hash) {
		
		hash += magicStr;
		byte[] b = hash.getBytes(StandardCharsets.UTF_8);
		byte[] output = SHA(b);
		System.out.println(new String(output));
		System.out.println(bytesToHex(output));
		System.out.println(Base64Encode.encode(bytesToHex(output)));
		return Base64Encode.encode(new String(output));
	}
	
	public static String generateReturnHeader(String msg) {
		String returnMsg;
		returnMsg = "HTTP/1.1 101 Switching Protocols\n"
				+"Upgrade: Websocket\n"
				+"Connection: Upgrade\n"
				+"Sec-WebSocket-Accept: "
				+ generateHash(msg.substring(msg.indexOf("Sec-WebSocket-Key: ")+19,msg.indexOf("Sec-WebSocket-Key: ")+43))
				+ "\r\n\r\n";
		//System.out.println(msg.substring(msg.indexOf("Sec-WebSocket-Key: ")+19,msg.indexOf("Sec-WebSocket-Key: ")+43));
		
		return returnMsg;
	}

	//SHA-1 generator
	public static byte[] SHA(byte[] key) {
		MessageDigest md = null;
	    try {
	        md = MessageDigest.getInstance("SHA1");
	    }
	    catch(NoSuchAlgorithmException e) {
	        e.printStackTrace();
	    } 
	    return md.digest(key);
	}
	
   public static String bytesToHex(byte[] b) {
	      char hexDigit[] = {'0', '1', '2', '3', '4', '5', '6', '7',
	                         '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
	      StringBuffer buf = new StringBuffer();
	      for (int j=0; j<b.length; j++) {
	         buf.append(hexDigit[(b[j] >> 4) & 0x0f]);
	         buf.append(hexDigit[b[j] & 0x0f]);
	      }
	      return buf.toString();
   }
	
}
